MPASM  5.41                      LAB0CODE.ASM   1-19-2012  16:25:04         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**********************************************************
                      00002 ;*   Laboratory # 0
                      00003 ;*      Program reads the state of RB0 pushbutton (normal=1)
                      00004 ;*      On each succesive press, rotates segment on left-most
                      00005 ;*      7 segment display. (portD if simulating)
                      00006 ;**********************************************************
                      00007 
                      00008         list p=16f877   ; Assembler directive to turn list on
                      00009                         ; and give 16F877 listing codes
                      00010 ;
                      00011 ; Define some 8-bit file register labels
                      00012 ; See PIC16F877 datasheet for location of the Special Function Registers 
                      00013 ;
  00000006            00014 PORTB   equ     0x06    ; in BANK 0
  00000006            00015 TRISB   equ     0x06    ; in BANK 1
  00000008            00016 PORTD   equ     0x08    ; in BANK 0
  00000008            00017 TRISD   equ     0x08    ; in BANK 1
  00000020            00018 SEL     equ     0x20    ; in BANK 0
  00000021            00019 TOGGLE  equ     0x21    ; in BANK 0
  00000003            00020 STATUS  equ     0x03    ; in all BANKS
                      00021 ;
                      00022 ;  Now define some BIT labels...
                      00023 ;
  00000000            00024 W       equ     d'0'    ; destination=W  ('working' register)
  00000001            00025 F       equ     d'1'    ; destination=f
  00000006            00026 RP1     equ     d'6'    ; bank select high bit in status reg.
  00000005            00027 RP0     equ     d'5'    ; bank select low bit in status reg.
                      00028 ;
                      00029 ;  Executable part of program starts here...  
                      00030 ;  Start at the reset vector
                      00031 ;
0000                  00032         org     0x000   ; program starts at Program Memory location 0x0000
0000   0000           00033         nop             ; nop required by older MPLAB ICD system
                      00034 ;
                      00035 ;  First allow program to initialize registers
                      00036 ;
0001   0183           00037 Init:   clrf    STATUS          ; clear status reg, to select BANK0
0002   1683           00038         bsf     STATUS,RP0      ; select bank 1 so we can access the TRISD register
0003   0188           00039         clrf    TRISD           ; set all direction bits of PORTD to '0': all outputs
0004   3001           00040         movlw   B'00000001'     ; set up I/O data for configuring PortB
0005   0086           00041         movwf   TRISB           ; set bit 0 of PORTB to 1:input; all other bits to 0:outputs
0006   1283           00042         bcf     STATUS,RP0      ; select bank 0 so we can access the PORTD register
0007   0188           00043         clrf    PORTD           ; set all bits to '0' - turns off all segments.
0008   3001           00044         movlw   B'00000001'     ; move the binary number B'00000001' into W
0009   00A0           00045         movwf   SEL             ; and store in memory location SEL (= address 0x20 in memory)
000A   0088           00046         movwf   PORTD           ; store it also to PORTD, turn on top segment.
000B   3002           00047         movlw   B'00000010'     ; move the binary number B'00000010' to PORTB,
000C   0086           00048         movwf   PORTB           ; this will turn on the left-most 7-segment display
000D   01A1           00049         clrf    TOGGLE          ; set RAM location TOGGLE (=0x21) to all zeros: B'00000000'
                      00050 
000E   1806           00051 TST:    btfsc   PORTB,0         ; port B bit 0 is tested (RB0 button normally '1')
000F   2815           00052         goto    LED_NXT         ; if button not pressed, then go to line labeled LED_NXT        
0010                  00053 LED_CHG:
MPASM  5.41                      LAB0CODE.ASM   1-19-2012  16:25:04         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010   1821           00054         btfsc   TOGGLE,0        ; button pressed(='0'), test bit 0 of TOGGLE register
0011   280E           00055         goto    TST             ; if TOGGLE bit 0 is set, then go to line labeled TST   
0012   0DA0           00056         rlf     SEL,F           ; if TOGGLE bit 0 is clear, left-shift contents of SEL
0013   1421           00057         bsf     TOGGLE,0        ; and, set bit 0 of TOGGLE
0014   280E           00058         goto    TST             ; return to RB0 switch testing statement
0015                  00059 LED_NXT:
0015   0820           00060         movf    SEL,W           ; get display data (contents of SEL to W)
0016   0088           00061         movwf   PORTD           ; put display data in W to PORTD (outputs the bit pattern in W)
0017   01A1           00062         clrf    TOGGLE          ; set all bits of TOGGLE back to 0 including bit 0
0018   280E           00063         goto    TST             ; return to bit testing statement
                      00064         end                     ; Assembler directive = quit assembling.
MPASM  5.41                      LAB0CODE.ASM   1-19-2012  16:25:04         PAGE  3


SYMBOL TABLE
  LABEL                             VALUE 

F                                 00000001
Init                              00000001
LED_CHG                           00000010
LED_NXT                           00000015
PORTB                             00000006
PORTD                             00000008
RP0                               00000005
RP1                               00000006
SEL                               00000020
STATUS                            00000003
TOGGLE                            00000021
TRISB                             00000006
TRISD                             00000008
TST                               0000000E
W                                 00000000
__16F877                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXX------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    25
Program Memory Words Free:  8167


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

