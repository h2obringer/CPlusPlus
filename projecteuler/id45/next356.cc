//  
//  Triangle,pentagonal,and hexagonal numbers are generated by the following formulae:
//  
//  Triangle Tn=n(n-1)/2  1,3,6,10,15,...
//  Pentagonal Pn=n(3n-1)/2  1,5,12,22,35,...
//  Hexagonal Hn=n(2n-1)  1,6,15,28,45,...
//  
//  It can be verified that T287=P165=H143=40755
//  Find the next triangle number that is also pentagonal and hexagonal

#include <iostream>
#include <cstdlib>
#include <string>
#include <sstream>
using namespace std;

//number gets too big therefore we must use our own math

//split triangle pentagonal and hexagonal into their own functions.

string itos(int n){
  ostringstream out;
  out << n;
  return out.str();
}

string computeNextTriangle(unsigned long long n){
  unsigned long long temp;
  unsigned long long temp2;
  unsigned long long carry;
  unsigned long long digit;
  string stemp;
  string stemp2;
  string scarry;
  string sdigit;

  temp=n-1;
  stemp=itos(n);

  carry=0;
  while(unsigned long long i=stemp.length();i>=0;i--){
    temp2=((stemp[i]-'0')*temp)+carry;
    digit=temp%10;
    carry=temp/10;
    

}

string computeNextPentagonal(string& n){

}

string computeNextHexagonal(string& n){

}

int main(){
  int t=288;
  int p=165;
  int h=143;
  int ptemp;
  int htemp;
  unsigned long long triangle=(t*(t-1))/2;
  unsigned long long pentagonal=p*(((3*p)-1)/2);
  unsigned long long hexagonal=h*((2*h)-1);
  bool done=false;
  do{
    triangle=(t*(t-1))/2;
    pentagonal=(p*((3*p)-1))/2;
    hexagonal=h*((2*h)-1);
    ptemp=p;
    htemp=h;
    while(pentagonal<triangle){
      ptemp++;
      pentagonal=ptemp*(((3*ptemp)-1)/2);
    }
    while(hexagonal<triangle){
      htemp++;
      hexagonal=htemp*((2*htemp)-1);
    }

    if(pentagonal==triangle){
      p=ptemp;
    }else{
      if(pentagonal>triangle){
        while(pentagonal>triangle){
          p=ptemp-1;
          ptemp=p;
          pentagonal=ptemp*(((3*ptemp)-1)/2);
        }
      }
    }
    
    if(hexagonal==triangle){
      h=htemp;
    }else{
      if(hexagonal>triangle){
        while(hexagonal>triangle){
          h=htemp-1;
          htemp=h;
          hexagonal=htemp*((2*htemp)-1);
        }
      }
    }
    
    t++;
    if(hexagonal==triangle){
      if(pentagonal==triangle){
        done=true;
      }
    }
    if(triangle>14074457345618258602){
      cout << "too big" << endl;
      exit(-1);
    }
  }while(done==false);
  cout << "T" << t << ": " << triangle << endl;
  cout << "P" << p << ": " << pentagonal << endl;
  cout << "H" << h << ": " << hexagonal << endl;
}
